{
    "comment" : "Please see https://github.com/linkedin/rest.li/wiki/D2-Zookeeper-Properties for more details",
    "d2Clusters" : {
        "ProfileService": {
            "services":
                {
                    "member": {
                        "path" : "/member",
                        "loadBalancerStrategyProperties" : {
                            "comment" : "We set the threshold for http.loadBalancer.low/highWaterMark to be >2500ms because our average latency is 2500ms so the latency won't affect call dropping mode. ",
                            "http.loadBalancer.lowWaterMark" : "3000",
                            "http.loadBalancer.highWaterMark" : "6000"
                        },
                        "degraderProperties" : {
                            "comment" : "since average latency of server1,3,5 is 2500, then their latencies will exceed the 2000 ms degrader.highLatency. This will cause the traffic to be shifted to server 2,4,6",
                            "degrader.lowLatency" : "1000",
                            "degrader.highLatency" : "2000",
                            "degrader.minCallCount" : "1"
                        }
                    },
                    "contact": {
                        "path" : "/contact",
                        "loadBalancerStrategyProperties" : {
                            "http.loadBalancer.lowWaterMark" : "3000",
                            "http.loadBalancer.highWaterMark" : "6000"
                        },
                        "degraderProperties" : {
                            "comment" : "for contact, the degrader.highLatency here is set to 3000 ms so the average latency 2500ms won't cause traffic to be shifted out from server 1,3,5.",
                            "degrader.lowLatency" : "2000",
                            "degrader.highLatency" : "3000",
                            "degrader.minCallCount" : "1"
                        }
                    },
                    "connection": {
                        "path" : "/connection",
                        "loadBalancerStrategyProperties" : {
                            "http.loadBalancer.lowWaterMark" : "3000",
                            "http.loadBalancer.highWaterMark" : "6000"
                        },
                        "degraderProperties" : {
                            "comment" : "for connection, the degrader.highLatency here is set to 4000 ms so the average latency 2500ms won't cause traffic to be shifted out from server 1,3,5.",
                            "degrader.lowLatency" : "3000",
                            "degrader.highLatency" : "4000",
                            "degrader.minCallCount" : "1"
                        }
                    }
                },
            "partitionProperties" :
                {
                    "comment" : "What this means is key 0-99 goes to partition 0. 100-199 goes to partition 1. 200-299 goes to partition 2. Any number besides that will cause an exception",
                    "partitionType" : "RANGE",
                    "partitionKeyRegex" : "partitionId=(\d+)",
                    "partitionCount" : "3",
                    "keyRangeStart" : "0",
                    "partitionSize" : "100"
                }
        },
        "EmailService": {
            "services":
                {
                    "inbox" : {
                        "path" : "/inbox"
                    }
                },
            "partitionProperties" :
            {
                "comment" : "What this means is the key is going to be MD5 and the hash will be used to determine the partitionId (either partition 0 or 1)",
                "partitionType" : "HASH",
                "partitionKeyRegex" : "user=(.*)",
                "partitionCount" : "2",
                "hashAlgorithm" : "MD5"
            }
        },
        "BigDataService": {
            "services":
            {
                "compute" : {
                    "path" : "/compute",
                    "transportClientProperties" : {
                        "http.maxResponseSize" : "2000000",
                        "http.requestTimeout" : "5000",
                        "allowedClientOverrideKeys" : "http.requestTimeout"
                    },
                    "loadBalancerStrategyProperties" : {
                        "comment" : "In this example the server latency is 10000ms. Because we set the highWaterMark to 12000ms, D2 won't consider the server is in a bad state",
                        "http.loadBalancer.lowWaterMark" : "8000",
                        "http.loadBalancer.highWaterMark" : "12000"
                    },
                    "degraderProperties" : {
                        "comment" : "In this example the server latency is 10000ms. Because we set the highLatency to 12000ms, D2 won't consider the server is in a bad state",
                        "degrader.lowLatency" : "8000",
                        "degrader.highLatency" : "12000",
                        "degrader.minCallCount" : "2"
                    }
                }
            }
        },
        "CacheService": {
            "services":
            {
                "cache" : {
                    "path" : "/cache",
                    "loadBalancerStrategyProperties" : {
                        "http.loadBalancer.hashMethod" : "uriRegex",
                        "http.loadBalancer.hashConfig" : {
                            "regexes" : [
                                "key=(\w+)",
                                "secondary=(\w+)"
                            ],
                            "warnOnNoMatch" : "false"
                        }
                    }
                }
            }
        }
    },
    "defaultServiceProperties" : {
        "loadBalancerStrategyList" : [
            "degraderV3"
        ],
        "prioritizedSchemes" : [
            "http"
        ],
        "loadBalancerStrategyProperties" : {
            "http.loadBalancer.updateIntervalMs" : "5000",
            "http.loadBalancer.pointsPerWeight" : "100"
        },
        "transportClientProperties" : {
            "http.requestTimeout" : "10000"
        },
        "degraderProperties" : {
            "degrader.minCallCount" : "10",
            "degrader.lowErrorRate" : "0.01",
            "degrader.highErrorRate" : "0.1"
        }
    },
    "zkConnectString" : "localhost:2181",
    "zkSessionTimeout" : 5000,
    "zkBasePath" : "/d2",
    "zkRetryLimit" : 10
}
